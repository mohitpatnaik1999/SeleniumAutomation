<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="0" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-11T17:22:06 IST" name="Suite" finished-at="2024-12-11T17:22:46 IST" duration-ms="39542">
    <groups>
      <group name="purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" name="submitOrder" class="project.tests.SubmitOrderTest"/>
      </group> <!-- purchase -->
      <group name="errorHandling">
        <method signature="ErrorValidationTest.loginValidation()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" name="loginValidation" class="project.tests.ErrorValidationTest"/>
      </group> <!-- errorHandling -->
    </groups>
    <test started-at="2024-12-11T17:22:06 IST" name="Error Validation Test" finished-at="2024-12-11T17:22:46 IST" duration-ms="39542">
      <class name="project.tests.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:06 IST" name="launchApplication" finished-at="2024-12-11T17:22:15 IST" duration-ms="8451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginValidation()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:15 IST" name="loginValidation" finished-at="2024-12-11T17:22:16 IST" duration-ms="1364" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at project.tests.ErrorValidationTest.loginValidation(ErrorValidationTest.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:16 IST" name="tearDown" finished-at="2024-12-11T17:22:16 IST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:16 IST" name="launchApplication" finished-at="2024-12-11T17:22:19 IST" duration-ms="2941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginValidation()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:19 IST" name="loginValidation" finished-at="2024-12-11T17:22:23 IST" duration-ms="3401" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at project.tests.ErrorValidationTest.loginValidation(ErrorValidationTest.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:23 IST" name="tearDown" finished-at="2024-12-11T17:22:24 IST" duration-ms="1553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:24 IST" name="launchApplication" finished-at="2024-12-11T17:22:31 IST" duration-ms="6358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginValidation()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:31 IST" name="loginValidation" finished-at="2024-12-11T17:22:32 IST" duration-ms="994" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at project.tests.ErrorValidationTest.loginValidation(ErrorValidationTest.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:32 IST" name="tearDown" finished-at="2024-12-11T17:22:33 IST" duration-ms="400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:33 IST" name="launchApplication" finished-at="2024-12-11T17:22:36 IST" duration-ms="3442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productValidation()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:36 IST" name="productValidation" finished-at="2024-12-11T17:22:44 IST" duration-ms="7734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:project.tests.ErrorValidationTest@5c7bfdc1]" started-at="2024-12-11T17:22:44 IST" name="tearDown" finished-at="2024-12-11T17:22:46 IST" duration-ms="1972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- project.tests.ErrorValidationTest -->
    </test> <!-- Error Validation Test -->
    <test started-at="2024-12-11T17:22:06 IST" name="Submit Order Test" finished-at="2024-12-11T17:22:45 IST" duration-ms="39256">
      <class name="project.tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:07 IST" name="launchApplication" finished-at="2024-12-11T17:22:14 IST" duration-ms="7064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:14 IST" name="submitOrder" data-provider="getData" finished-at="2024-12-11T17:22:21 IST" duration-ms="7053" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Mohit@123, product=ADIDAS ORIGINAL, email=mohit@email.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:21 IST" name="tearDown" finished-at="2024-12-11T17:22:21 IST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:21 IST" name="launchApplication" finished-at="2024-12-11T17:22:27 IST" duration-ms="5336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:27 IST" name="submitOrder" data-provider="getData" finished-at="2024-12-11T17:22:36 IST" duration-ms="9296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Mohit@1999, product=IPHONE 13 PRO, email=mohit@abc.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:36 IST" name="tearDown" finished-at="2024-12-11T17:22:37 IST" duration-ms="743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:37 IST" name="launchApplication" finished-at="2024-12-11T17:22:43 IST" duration-ms="6375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest()[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:43 IST" name="orderHistoryTest" finished-at="2024-12-11T17:22:45 IST" depends-on-methods="project.tests.SubmitOrderTest.submitOrder" duration-ms="1707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:project.tests.SubmitOrderTest@312aa7c]" started-at="2024-12-11T17:22:45 IST" name="tearDown" finished-at="2024-12-11T17:22:45 IST" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- project.tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
